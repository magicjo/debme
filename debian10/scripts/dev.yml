---
- name: "Dev.yml"
  hosts: localhost
  gather_facts: yes
  tasks:
    - name: (docker) install dependencies
      apt:
        name: "{{ packages }}"
        state: present
      vars:
        packages:
          - apt-transport-https
          - ca-certificates
          - curl
          - gnupg-agent
          - software-properties-common
      become: yes

    - name: (docker) docker add key
      shell: "curl -fsSL https://download.docker.com/linux/debian/gpg | apt-key add -"
      become: yes

    - name: (docker) docker add repository
      apt_repository:
        repo: "deb [arch=amd64] https://download.docker.com/linux/debian {{ ansible_lsb.codename|lower }} stable"
        filename: "docker"
        state: present
        update_cache: yes
      become: yes

    - name: (docker) install docker
      apt:
        name: "{{ packages }}"
        state: present
      vars:
        packages:
          - containerd.io
          - docker-ce
          - docker-ce-cli
      become: yes

    - name: (docker) add users to the docker group
      user:
        name: "{{ ansible_user }}"
        groups: docker
        append: yes
      become: yes

    - name: (vscode) download vscode
      get_url:
        url: https://vscode-update.azurewebsites.net/latest/linux-deb-x64/stable
        dest: "/tmp/vscode.deb"

    - name: (vscode) install vscode
      apt:
        deb: "/tmp/vscode.deb"
      become: yes

    - name: (pycharm) download pycharm
      get_url:
        url: "http://download.jetbrains.com/python/pycharm-community-2020.3.tar.gz"
        dest: "/tmp/pycharm.tar.gz"

    - name: (pycharm) install pycharm
      unarchive:
        src: "/tmp/pycharm.tar.gz"
        dest: "/opt"
        copy: false
      become: yes

    - name: (webstorm) download webstorm
      get_url:
        url: "https://download.jetbrains.com/webstorm/WebStorm-2020.3.tar.gz"
        dest: "/tmp/webstorm.tar.gz"

    - name: (webstorm) install webstorm
      unarchive:
        src: "/tmp/webstorm.tar.gz"
        dest: "/opt"
        copy: false
      become: yes

    - name: (nvm) install nvm
      shell: >
        curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.37.2/install.sh | bash
      args:
        executable: /bin/bash
        chdir: "{{ ansible_env.HOME }}"
        creates: "{{ ansible_env.HOME }}/.nvm/nvm.sh"

    - name: (nvm) install default nodejs
      shell: >
        . {{ ansible_env.HOME }}/.nvm/nvm.sh && nvm install node
      args:
        executable: /bin/bash
        chdir: "{{ ansible_env.HOME }}"

    - name: (nvm) configure nvm fish support
      command: /usr/bin/fish -c 'omf install nvm'
